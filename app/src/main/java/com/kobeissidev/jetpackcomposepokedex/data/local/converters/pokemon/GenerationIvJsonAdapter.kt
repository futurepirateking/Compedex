// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.kobeissidev.jetpackcomposepokedex.data.local.converters.pokemon

import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.DiamondPearl
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.GenerationIv
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.HeartGoldSoulSilver
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.Platinum
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class GenerationIvJsonAdapter(
  moshi: Moshi
) : JsonAdapter<GenerationIv>() {
  private val options: JsonReader.Options = JsonReader.Options.of("diamond-pearl",
      "heartgold-soulsilver", "platinum")

  private val nullableDiamondPearlAdapter: JsonAdapter<DiamondPearl?> =
      moshi.adapter(DiamondPearl::class.java, emptySet(), "diamondPearl")

  private val nullableHeartGoldSoulSilverAdapter: JsonAdapter<HeartGoldSoulSilver?> =
      moshi.adapter(HeartGoldSoulSilver::class.java, emptySet(), "heartGoldSoulSilver")

  private val nullablePlatinumAdapter: JsonAdapter<Platinum?> = moshi.adapter(Platinum::class.java,
      emptySet(), "platinum")

  @Volatile
  private var constructorRef: Constructor<GenerationIv>? = null

  public override fun toString(): String = buildString(34) {
      append("GeneratedJsonAdapter(").append("GenerationIv").append(')') }

  public override fun fromJson(reader: JsonReader): GenerationIv {
    var diamondPearl: DiamondPearl? = null
    var heartGoldSoulSilver: HeartGoldSoulSilver? = null
    var platinum: Platinum? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          diamondPearl = nullableDiamondPearlAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          heartGoldSoulSilver = nullableHeartGoldSoulSilverAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          platinum = nullablePlatinumAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffff8.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  GenerationIv(
          diamondPearl = diamondPearl,
          heartGoldSoulSilver = heartGoldSoulSilver,
          platinum = platinum
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<GenerationIv> = this.constructorRef ?:
          GenerationIv::class.java.getDeclaredConstructor(DiamondPearl::class.java,
          HeartGoldSoulSilver::class.java, Platinum::class.java, Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
      return localConstructor.newInstance(
          diamondPearl,
          heartGoldSoulSilver,
          platinum,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: GenerationIv?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("diamond-pearl")
    nullableDiamondPearlAdapter.toJson(writer, value_.diamondPearl)
    writer.name("heartgold-soulsilver")
    nullableHeartGoldSoulSilverAdapter.toJson(writer, value_.heartGoldSoulSilver)
    writer.name("platinum")
    nullablePlatinumAdapter.toJson(writer, value_.platinum)
    writer.endObject()
  }
}
