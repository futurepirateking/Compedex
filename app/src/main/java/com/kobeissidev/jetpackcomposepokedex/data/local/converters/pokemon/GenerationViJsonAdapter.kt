// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.kobeissidev.jetpackcomposepokedex.data.local.converters.pokemon

import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.GenerationVi
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.OmegaRubyAlphaSapphire
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.XY
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.reflect.Constructor
import kotlin.Int

public class GenerationViJsonAdapter(
  moshi: Moshi
) : JsonAdapter<GenerationVi>() {
  private val options: JsonReader.Options = JsonReader.Options.of("omegaruby-alphasapphire", "x-y")

  private val nullableOmegaRubyAlphaSapphireAdapter: JsonAdapter<OmegaRubyAlphaSapphire?> =
      moshi.adapter(OmegaRubyAlphaSapphire::class.java, emptySet(), "omegaRubyAlphaSapphire")

  private val nullableXYAdapter: JsonAdapter<XY?> = moshi.adapter(XY::class.java, emptySet(), "xY")

  @Volatile
  private var constructorRef: Constructor<GenerationVi>? = null

  public override fun toString(): String = buildString(34) {
      append("GeneratedJsonAdapter(").append("GenerationVi").append(')') }

  public override fun fromJson(reader: JsonReader): GenerationVi {
    var omegaRubyAlphaSapphire: OmegaRubyAlphaSapphire? = null
    var xY: XY? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          omegaRubyAlphaSapphire = nullableOmegaRubyAlphaSapphireAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          xY = nullableXYAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffffc.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  GenerationVi(
          omegaRubyAlphaSapphire = omegaRubyAlphaSapphire,
          xY = xY
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<GenerationVi> = this.constructorRef ?:
          GenerationVi::class.java.getDeclaredConstructor(OmegaRubyAlphaSapphire::class.java,
          XY::class.java, Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
          this.constructorRef = it }
      return localConstructor.newInstance(
          omegaRubyAlphaSapphire,
          xY,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: GenerationVi?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("omegaruby-alphasapphire")
    nullableOmegaRubyAlphaSapphireAdapter.toJson(writer, value_.omegaRubyAlphaSapphire)
    writer.name("x-y")
    nullableXYAdapter.toJson(writer, value_.xY)
    writer.endObject()
  }
}
