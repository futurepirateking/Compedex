// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.kobeissidev.jetpackcomposepokedex.data.local.converters.species

import com.kobeissidev.jetpackcomposepokedex.data.model.species.Pokemon
import com.kobeissidev.jetpackcomposepokedex.data.model.species.Variety
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.reflect.Constructor
import kotlin.Boolean
import kotlin.Int

public class VarietyJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Variety>() {
  private val options: JsonReader.Options = JsonReader.Options.of("is_default", "pokemon")

  private val booleanAdapter: JsonAdapter<Boolean> = moshi.adapter(Boolean::class.java, emptySet(),
      "isDefault")

  private val nullablePokemonAdapter: JsonAdapter<Pokemon?> = moshi.adapter(Pokemon::class.java,
      emptySet(), "pokemon")

  @Volatile
  private var constructorRef: Constructor<Variety>? = null

  public override fun toString(): String = buildString(29) {
      append("GeneratedJsonAdapter(").append("Variety").append(')') }

  public override fun fromJson(reader: JsonReader): Variety {
    var isDefault: Boolean? = false
    var pokemon: Pokemon? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          isDefault = booleanAdapter.fromJson(reader) ?: throw Util.unexpectedNull("isDefault",
              "is_default", reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          pokemon = nullablePokemonAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffffc.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  Variety(
          isDefault = isDefault as Boolean,
          pokemon = pokemon
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<Variety> = this.constructorRef ?:
          Variety::class.java.getDeclaredConstructor(Boolean::class.javaPrimitiveType,
          Pokemon::class.java, Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
          this.constructorRef = it }
      return localConstructor.newInstance(
          isDefault,
          pokemon,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: Variety?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("is_default")
    booleanAdapter.toJson(writer, value_.isDefault)
    writer.name("pokemon")
    nullablePokemonAdapter.toJson(writer, value_.pokemon)
    writer.endObject()
  }
}
