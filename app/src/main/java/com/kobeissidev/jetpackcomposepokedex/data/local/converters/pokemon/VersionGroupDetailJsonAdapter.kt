// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.kobeissidev.jetpackcomposepokedex.data.local.converters.pokemon

import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.MoveLearnMethod
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.VersionGroup
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.VersionGroupDetail
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.reflect.Constructor
import kotlin.Int

public class VersionGroupDetailJsonAdapter(
  moshi: Moshi
) : JsonAdapter<VersionGroupDetail>() {
  private val options: JsonReader.Options = JsonReader.Options.of("level_learned_at",
      "move_learn_method", "version_group")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "levelLearnedAt")

  private val nullableMoveLearnMethodAdapter: JsonAdapter<MoveLearnMethod?> =
      moshi.adapter(MoveLearnMethod::class.java, emptySet(), "moveLearnMethod")

  private val nullableVersionGroupAdapter: JsonAdapter<VersionGroup?> =
      moshi.adapter(VersionGroup::class.java, emptySet(), "versionGroup")

  @Volatile
  private var constructorRef: Constructor<VersionGroupDetail>? = null

  public override fun toString(): String = buildString(40) {
      append("GeneratedJsonAdapter(").append("VersionGroupDetail").append(')') }

  public override fun fromJson(reader: JsonReader): VersionGroupDetail {
    var levelLearnedAt: Int? = null
    var moveLearnMethod: MoveLearnMethod? = null
    var versionGroup: VersionGroup? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          levelLearnedAt = nullableIntAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          moveLearnMethod = nullableMoveLearnMethodAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          versionGroup = nullableVersionGroupAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffff8.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  VersionGroupDetail(
          levelLearnedAt = levelLearnedAt,
          moveLearnMethod = moveLearnMethod,
          versionGroup = versionGroup
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<VersionGroupDetail> = this.constructorRef ?:
          VersionGroupDetail::class.java.getDeclaredConstructor(Int::class.javaObjectType,
          MoveLearnMethod::class.java, VersionGroup::class.java, Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
      return localConstructor.newInstance(
          levelLearnedAt,
          moveLearnMethod,
          versionGroup,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: VersionGroupDetail?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("level_learned_at")
    nullableIntAdapter.toJson(writer, value_.levelLearnedAt)
    writer.name("move_learn_method")
    nullableMoveLearnMethodAdapter.toJson(writer, value_.moveLearnMethod)
    writer.name("version_group")
    nullableVersionGroupAdapter.toJson(writer, value_.versionGroup)
    writer.endObject()
  }
}
