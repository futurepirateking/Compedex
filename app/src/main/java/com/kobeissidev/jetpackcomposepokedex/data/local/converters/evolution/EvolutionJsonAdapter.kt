// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.kobeissidev.jetpackcomposepokedex.data.local.converters.evolution

import com.kobeissidev.jetpackcomposepokedex.data.model.evolution.Chain
import com.kobeissidev.jetpackcomposepokedex.data.model.evolution.Evolution
import com.kobeissidev.jetpackcomposepokedex.data.model.evolution.Item
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.reflect.Constructor
import kotlin.Int

public class EvolutionJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Evolution>() {
  private val options: JsonReader.Options = JsonReader.Options.of("baby_trigger_item", "chain",
      "id")

  private val nullableItemAdapter: JsonAdapter<Item?> = moshi.adapter(Item::class.java, emptySet(),
      "babyTriggerItem")

  private val chainAdapter: JsonAdapter<Chain> = moshi.adapter(Chain::class.java, emptySet(),
      "chain")

  private val intAdapter: JsonAdapter<Int> = moshi.adapter(Int::class.java, emptySet(), "id")

  @Volatile
  private var constructorRef: Constructor<Evolution>? = null

  public override fun toString(): String = buildString(31) {
      append("GeneratedJsonAdapter(").append("Evolution").append(')') }

  public override fun fromJson(reader: JsonReader): Evolution {
    var babyTriggerItem: Item? = null
    var chain: Chain? = null
    var id: Int? = 0
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          babyTriggerItem = nullableItemAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          chain = chainAdapter.fromJson(reader) ?: throw Util.unexpectedNull("chain", "chain",
              reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          id = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("id", "id", reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffff8.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  Evolution(
          babyTriggerItem = babyTriggerItem,
          chain = chain as Chain,
          id = id as Int
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<Evolution> = this.constructorRef ?:
          Evolution::class.java.getDeclaredConstructor(Item::class.java, Chain::class.java,
          Int::class.javaPrimitiveType, Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
      return localConstructor.newInstance(
          babyTriggerItem,
          chain,
          id,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: Evolution?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("baby_trigger_item")
    nullableItemAdapter.toJson(writer, value_.babyTriggerItem)
    writer.name("chain")
    chainAdapter.toJson(writer, value_.chain)
    writer.name("id")
    intAdapter.toJson(writer, value_.id)
    writer.endObject()
  }
}
