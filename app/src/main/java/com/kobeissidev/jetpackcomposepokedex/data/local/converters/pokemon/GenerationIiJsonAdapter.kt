// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.kobeissidev.jetpackcomposepokedex.data.local.converters.pokemon

import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.Crystal
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.GenerationIi
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.Gold
import com.kobeissidev.jetpackcomposepokedex.data.model.pokemon.Silver
import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.reflect.Constructor
import kotlin.Int

public class GenerationIiJsonAdapter(
  moshi: Moshi
) : JsonAdapter<GenerationIi>() {
  private val options: JsonReader.Options = JsonReader.Options.of("crystal", "gold", "silver")

  private val nullableCrystalAdapter: JsonAdapter<Crystal?> = moshi.adapter(Crystal::class.java,
      emptySet(), "crystal")

  private val nullableGoldAdapter: JsonAdapter<Gold?> = moshi.adapter(Gold::class.java, emptySet(),
      "gold")

  private val nullableSilverAdapter: JsonAdapter<Silver?> = moshi.adapter(Silver::class.java,
      emptySet(), "silver")

  @Volatile
  private var constructorRef: Constructor<GenerationIi>? = null

  public override fun toString(): String = buildString(34) {
      append("GeneratedJsonAdapter(").append("GenerationIi").append(')') }

  public override fun fromJson(reader: JsonReader): GenerationIi {
    var crystal: Crystal? = null
    var gold: Gold? = null
    var silver: Silver? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          crystal = nullableCrystalAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          gold = nullableGoldAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          silver = nullableSilverAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffff8.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  GenerationIi(
          crystal = crystal,
          gold = gold,
          silver = silver
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<GenerationIi> = this.constructorRef ?:
          GenerationIi::class.java.getDeclaredConstructor(Crystal::class.java, Gold::class.java,
          Silver::class.java, Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
          this.constructorRef = it }
      return localConstructor.newInstance(
          crystal,
          gold,
          silver,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: GenerationIi?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("crystal")
    nullableCrystalAdapter.toJson(writer, value_.crystal)
    writer.name("gold")
    nullableGoldAdapter.toJson(writer, value_.gold)
    writer.name("silver")
    nullableSilverAdapter.toJson(writer, value_.silver)
    writer.endObject()
  }
}
